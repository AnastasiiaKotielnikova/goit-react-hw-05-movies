{"version":3,"file":"static/js/284.d41a0c5a.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","pages/MoviePage/MoviePage.styled.jsx","pages/MoviePage/MoviePage.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: flex-start;\n  width: 1000px;\n  margin: 0 auto;\n  margin-bottom: 30px;\n  padding: 30px;\n  //   box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n  //     0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  //   &:hover {\n  //     transform: scale(1.03);\n  //     cursor: pointer;\n  //     box-shadow: 10px 11px 10px -4px rgba(0, 0, 0, 0.48);\n  //     -webkit-box-shadow: 10px 11px 10px -4px rgba(0, 0, 0, 0.48);\n  //     -moz-box-shadow: 10px 11px 10px -4px rgba(0, 0, 0, 0.48);\n  //   }\n`;\n\nexport const ImageWrap = styled.div`\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\nexport const Image = styled.img`\n  width: 360px;\n  height: 450px;\n  transition: all 600ms cubic-bezier(0.4, 0, 0.2, 1);\n  border-radius: 4px;\n  &:hover {\n    transform: scale(0.6);\n  }\n`;\n\nexport const InfoWrap = styled.div`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 0px 30px;\n  p {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Description = styled.p``;\n\nexport const Title = styled.h2`\n  font-weight: 700;\n  font-size: 30px;\n  margin-bottom: 20px;\n`;\n\nexport const Raiting = styled.div`\n  display: flex;\n  margin-bottom: 30px;\n  p {\n    margin-right: 20px;\n  }\n`;\n\nexport const OtherInfo = styled.ul`\n  display: flex;\n  list-style: none;\n  padding: 0px;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  width: 40px;\n  margin-right: 20px;\n  padding: 5px;\n  color: blue;\n  font-weight: 500;\n  font-size: 20px;\n  border-radius: 4px;\n  outline: none;\n  text-decoration: none;\n  &.active {\n    color: #ffffff;\n    background-color: blue;\n  }\n  &:hover,\n  &:focus {\n    color: #ffffff;\n    background-color: blue;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Outlet, useLocation } from 'react-router-dom';\n\nimport {\n  Container,\n  ImageWrap,\n  Image,\n  InfoWrap,\n  Title,\n  Raiting,\n  Description,\n  OtherInfo,\n  StyledNavLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = ({ info }) => {\n  const {\n    original_title,\n    genres,\n    overview,\n    poster_path,\n    release_date,\n    vote_average,\n  } = info;\n  const imageBaseUrl = `https://image.tmdb.org/t/p/w500`;\n  const releaseDate = release_date.slice(0, 4);\n  const voteAverage = Math.floor(vote_average * 10);\n  const movieGanres = genres.map(genre => genre.name);\n  const location = useLocation();\n\n  return (\n    <Container>\n      <ImageWrap>\n        <Image src={imageBaseUrl + poster_path} alt={original_title} />\n      </ImageWrap>\n      <InfoWrap>\n        <Title>\n          {original_title} ({releaseDate ? releaseDate : 'N/A'})\n        </Title>\n        <p>Genres: {movieGanres.join(' , ')}</p>\n        <Raiting>\n          <p>User score:</p>\n          {''}\n          {voteAverage ? voteAverage + '%' : 'No information'}\n        </Raiting>\n        <Description>Overview: {overview}</Description>\n        <OtherInfo>\n          <li>\n            <StyledNavLink to=\"cast\" state={location.state}>\n              CAST\n            </StyledNavLink>\n          </li>\n          <li>\n            <StyledNavLink to=\"review\" state={location.state}>\n              REVIEW\n            </StyledNavLink>\n          </li>\n        </OtherInfo>\n      </InfoWrap>\n      <Outlet />\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n  info: PropTypes.shape({\n    original_title: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    overview: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 50px 100px;\n  button {\n    width: 100px;\n    padding: 5px;\n    background-color: blue;\n    color: #ffffff;\n    font-weight: 500;\n    font-size: 16px;\n    font-family: 'Exo', sans-serif;\n    border-radius: 4px;\n    border: none;\n    outline: none;\n    &.active {\n      background-color: yellow;\n    }\n    &:hover,\n    &:focus {\n      color: #ffffff;\n      background-color: yellow;\n    }\n  }\n`;\n\nexport const Error = styled.h2`\n  text-align: center;\n  margin-top: 100px;\n`;\n","import { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMoviesDetails } from 'services/api';\nimport MovieDetails from 'components/MovieDetails';\nimport { Container, Error } from './MoviePage.styled';\nimport { startLoader, stopLoader } from 'components/Loader';\n\nconst MoviePage = () => {\n  const [movie, setMovie] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    setStatus('pending');\n    getMoviesDetails(id)\n      .then(response => {\n        setMovie(response);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setStatus('rejected');\n        console.log(error);\n      })\n      .finally(() => {\n        stopLoader();\n      });\n  }, [id]);\n\n  const onGoBackClick = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n\n  return (\n    <Container>\n      {status === 'pending' && startLoader()}\n      {status === 'resolved' && (\n        <>\n          <button type=\"button\" onClick={onGoBackClick}>\n            GO BACK\n          </button>\n          <MovieDetails info={movie} />\n        </>\n      )}\n      {status === 'rejected' && (\n        <Error>Ups... Something went wrong. Please try again later.</Error>\n      )}\n    </Container>\n  );\n};\n\nexport default MoviePage;\n","import axios from 'axios';\n\nconst KEY = '0d230252106f56106b4162aa542b588d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendingMovies() {\n  try {\n    const url = `${BASE_URL}/trending/movie/day?api_key=${KEY}&page=1`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesByName(searchQuery) {\n  try {\n    const url = `${BASE_URL}/search/movie?api_key=${KEY}&query=${searchQuery}&page=1`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesDetails(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}?api_key=${KEY}`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCredits(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}/credits?api_key=${KEY}`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReview(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&page=1`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["Container","styled","ImageWrap","Image","InfoWrap","Description","Title","Raiting","OtherInfo","StyledNavLink","NavLink","info","original_title","genres","overview","poster_path","release_date","vote_average","releaseDate","slice","voteAverage","Math","floor","movieGanres","map","genre","name","location","useLocation","src","alt","join","to","state","Error","useState","movie","setMovie","status","setStatus","id","useParams","navigate","useNavigate","useEffect","getMoviesDetails","then","response","catch","error","console","log","finally","stopLoader","startLoader","type","onClick","from","KEY","BASE_URL","getTrendingMovies","url","axios","data","getMoviesByName","searchQuery","getMovieCredits","getMovieReview"],"sourceRoot":""}