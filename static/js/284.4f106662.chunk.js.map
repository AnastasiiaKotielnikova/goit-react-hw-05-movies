{"version":3,"file":"static/js/284.4f106662.chunk.js","mappings":"+PAEaA,EAAYC,EAAAA,EAAAA,IAAH,qkBAkBTC,EAAYD,EAAAA,EAAAA,IAAH,oEAKTE,EAAQF,EAAAA,EAAAA,IAAH,uLAULG,EAAWH,EAAAA,EAAAA,IAAH,oLAWRI,EAAcJ,EAAAA,EAAAA,EAAH,sBAEXK,EAAQL,EAAAA,EAAAA,GAAH,yFAMLM,EAAUN,EAAAA,EAAAA,IAAH,uG,SCTpB,EAhCqB,SAAC,GAAc,IAAZO,EAAW,EAAXA,KAEpBC,EAMED,EANFC,eACAC,EAKEF,EALFE,OACAC,EAIEH,EAJFG,SACAC,EAGEJ,EAHFI,YACAC,EAEEL,EAFFK,WACAC,EACEN,EADFM,aAGIC,EAAcL,EAAOM,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAEpC,OACE,UAAClB,EAAD,YACE,SAACE,EAAD,WACE,SAACC,EAAD,CAAOgB,IANK,kCAMeP,EAAaQ,IAAKX,OAG/C,UAACL,EAAD,YACE,SAACE,EAAD,UAAQG,KACR,uBAAIM,EAAYM,KAAK,UACrB,UAACd,EAAD,YACE,yCAAOe,KAAKC,MAAMV,OAClB,wCAAMC,SAER,SAACT,EAAD,UAAcM,QAEhB,SAAC,KAAD,MAGL,ECzCYX,EAAYC,EAAAA,EAAAA,IAAH,wcAwBTuB,EAAQvB,EAAAA,EAAAA,GAAH,qECqBlB,EAzCkB,WAChB,OAA0BwB,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRP,EAAU,YACVQ,EAAAA,EAAAA,IAAiBP,GACdQ,MAAK,SAAAC,GACJZ,EAASY,EAASC,MAClBX,EAAU,WACX,IACAY,OAAM,SAAAC,GACLb,EAAU,YACVc,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACZ,IAMJ,OACE,UAAC,EAAD,WACc,aAAXF,IACC,iCACE,mBAAQiB,KAAK,SAASC,QARR,WAAO,IAAD,IAC1Bd,EAAQ,iBAACE,QAAD,IAACA,GAAD,UAACA,EAAUa,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IACnC,EAMO,sBAGA,SAAC,EAAD,CAAcxC,KAAMkB,OAGZ,aAAXE,IACC,SAACJ,EAAD,qEAIP,C,8IC3CKyB,EAAM,mCACNC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGAEGC,EAFH,UAEYF,EAFZ,uCAEmDD,EAFnD,mCAGoBI,EAAAA,GAAAA,IAAUD,GAH9B,cAGGb,EAHH,yBAIIA,EAASC,MAJb,gCAMHG,QAAQC,IAAR,MANG,gFAUA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFAEGH,EAFH,UAEYF,EAFZ,iCAE6CD,EAF7C,kBAE0DM,EAF1D,uDAGoBF,EAAAA,GAAAA,IAAUD,GAH9B,cAGGb,EAHH,yBAIIA,EAASC,MAJb,gCAMHG,QAAQC,IAAR,MANG,gFAUA,SAAeP,EAAtB,+CAAO,OAAP,oBAAO,WAAgCP,GAAhC,yFAEGsB,EAFH,UAEYF,EAFZ,kBAE8BpB,EAF9B,oBAE4CmB,EAF5C,4BAGoBI,EAAAA,GAAAA,IAAUD,GAH9B,cAGGb,EAHH,yBAIIA,EAASC,MAJb,gCAMHG,QAAQC,IAAR,MANG,gF","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","pages/MoviePage/MoviePage.styled.jsx","pages/MoviePage/MoviePage.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: flex-start;\n  width: 1000px;\n  margin: 0 auto;\n  margin-bottom: 30px;\n  padding: 30px;\n  //   box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n  //     0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  //   &:hover {\n  //     transform: scale(1.03);\n  //     cursor: pointer;\n  //     box-shadow: 10px 11px 10px -4px rgba(0, 0, 0, 0.48);\n  //     -webkit-box-shadow: 10px 11px 10px -4px rgba(0, 0, 0, 0.48);\n  //     -moz-box-shadow: 10px 11px 10px -4px rgba(0, 0, 0, 0.48);\n  //   }\n`;\n\nexport const ImageWrap = styled.div`\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\nexport const Image = styled.img`\n  width: 360px;\n  height: 450px;\n  transition: all 600ms cubic-bezier(0.4, 0, 0.2, 1);\n  border-radius: 4px;\n  &:hover {\n    transform: scale(0.6);\n  }\n`;\n\nexport const InfoWrap = styled.div`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 0px 30px;\n  p {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Description = styled.p``;\n\nexport const Title = styled.h2`\n  font-weight: 700;\n  font-size: 30px;\n  margin-bottom: 20px;\n`;\n\nexport const Raiting = styled.div`\n  display: flex;\n  margin-bottom: 30px;\n  p {\n    margin-right: 20px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Outlet } from 'react-router-dom';\n\nimport {\n  Container,\n  ImageWrap,\n  Image,\n  InfoWrap,\n  Title,\n  Raiting,\n  Description,\n} from './MovieDetails.styled';\n\nconst MovieDetails = ({ info }) => {\n  const {\n    original_title,\n    genres,\n    overview,\n    poster_path,\n    popularity,\n    vote_average,\n  } = info;\n  const imageBaseUrl = `https://image.tmdb.org/t/p/w500`;\n  const movieGanres = genres.map(genre => genre.name);\n\n  return (\n    <Container>\n      <ImageWrap>\n        <Image src={imageBaseUrl + poster_path} alt={original_title} />\n      </ImageWrap>\n\n      <InfoWrap>\n        <Title>{original_title}</Title>\n        <p>{movieGanres.join(' , ')}</p>\n        <Raiting>\n          <p>üëÅ {Math.round(popularity)}</p>\n          <p>‚≠êÔ∏è{vote_average}</p>\n        </Raiting>\n        <Description>{overview}</Description>\n      </InfoWrap>\n      <Outlet />\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n  info: PropTypes.shape({\n    original_title: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    overview: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    popularity: PropTypes.number.isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 50px 100px;\n  button {\n    width: 100px;\n    padding: 5px;\n    background-color: black;\n    color: orangered;\n    font-weight: 500;\n    font-size: 16px;\n    font-family: 'Exo', sans-serif;\n    border-radius: 4px;\n    border: none;\n    outline: none;\n    &.active {\n      background-color: orangered;\n    }\n    &:hover,\n    &:focus {\n      color: #ffffff;\n      background-color: orangered;\n    }\n  }\n`;\n\nexport const Error = styled.h2`\n  text-align: center;\n  margin-top: 100px;\n`;\n","import { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMoviesDetails } from 'services/api';\nimport MovieDetails from 'components/MovieDetails';\nimport { Container, Error } from './MoviePage.styled';\n\nconst MoviePage = () => {\n  const [movie, setMovie] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    setStatus('pending');\n    getMoviesDetails(id)\n      .then(response => {\n        setMovie(response.data);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setStatus('rejected');\n        console.log(error);\n      });\n  }, [id]);\n\n  const onGoBackClick = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n\n  return (\n    <Container>\n      {status === 'resolved' && (\n        <>\n          <button type=\"button\" onClick={onGoBackClick}>\n            GO BACK\n          </button>\n          <MovieDetails info={movie} />\n        </>\n      )}\n      {status === 'rejected' && (\n        <Error>Ups... Something went wrong. Please try again later.</Error>\n      )}\n    </Container>\n  );\n};\n\nexport default MoviePage;\n","import axios from 'axios';\n\nconst KEY = '0d230252106f56106b4162aa542b588d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendingMovies() {\n  try {\n    const url = `${BASE_URL}/trending/movie/day?api_key=${KEY}&language=en-US&page=1`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesByName(searchQuery) {\n  try {\n    const url = `${BASE_URL}/search/movie?api_key=${KEY}&query=${searchQuery}&include_adult=false&language=en-US&page=1`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesDetails(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["Container","styled","ImageWrap","Image","InfoWrap","Description","Title","Raiting","info","original_title","genres","overview","poster_path","popularity","vote_average","movieGanres","map","genre","name","src","alt","join","Math","round","Error","useState","movie","setMovie","status","setStatus","id","useParams","navigate","useNavigate","location","useLocation","useEffect","getMoviesDetails","then","response","data","catch","error","console","log","type","onClick","state","from","KEY","BASE_URL","getTrendingMovies","url","axios","getMoviesByName","searchQuery"],"sourceRoot":""}