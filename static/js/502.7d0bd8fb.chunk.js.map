{"version":3,"file":"static/js/502.7d0bd8fb.chunk.js","mappings":"mVAEaA,EAAYC,EAAAA,EAAAA,IAAH,6DAKTC,EAAaD,EAAAA,EAAAA,GAAH,6CAIVE,EAAaF,EAAAA,EAAAA,GAAH,0FAMVG,EAAaH,EAAAA,EAAAA,IAAH,sBAEVI,EAASJ,EAAAA,EAAAA,EAAH,gDAINK,EAAOL,EAAAA,EAAAA,EAAH,sB,SCOjB,EApBe,SAAC,GAAe,IAAbM,EAAY,EAAZA,MAChB,OACE,UAACP,EAAD,YACE,0CACA,SAACE,EAAD,UACGK,EAAMC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACxB,OACE,SAACR,EAAD,WACE,UAACC,EAAD,YACE,UAACC,EAAD,sBAAiBK,MACjB,SAACJ,EAAD,UAAOK,QAHMF,EAOpB,QAIR,EC1BYT,EAAYC,EAAAA,EAAAA,IAAH,sBAETW,EAAQX,EAAAA,EAAAA,EAAH,yI,kBCwClB,EArCmB,WACjB,OAA8BY,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACQR,GAAOS,EAAAA,EAAAA,MAAPT,GAkBR,OAhBAU,EAAAA,EAAAA,YAAU,WACRF,EAAU,YACVG,EAAAA,EAAAA,IAAeX,GACZY,MAAK,SAAAC,GACJP,EAAWO,EAASC,SACpBN,EAAU,WACX,IACAO,OAAM,SAAAC,GACLR,EAAU,YACVS,QAAQC,IAAIF,EACb,IACAG,SAAQ,YACPC,EAAAA,EAAAA,IACD,GACJ,GAAE,CAACpB,KAGF,UAAC,EAAD,WACc,YAAXO,IAAwBc,EAAAA,EAAAA,KACb,aAAXd,GAAyBF,EAAQiB,OAAS,IACzC,SAAC,EAAD,CAAQxB,MAAOO,IAEG,IAAnBA,EAAQiB,SACP,SAACnB,EAAD,sDAEU,aAAXI,IACC,SAACJ,EAAD,qEAIP,C,8LCxCKoB,EAAM,mCACNC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGAEGC,EAFH,UAEYF,EAFZ,uCAEmDD,EAFnD,oBAGoBI,EAAAA,GAAAA,IAAUD,GAH9B,cAGGb,EAHH,yBAIIA,EAASe,MAJb,gCAMHX,QAAQC,IAAR,MANG,gFAUA,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFAEGJ,EAFH,UAEYF,EAFZ,iCAE6CD,EAF7C,kBAE0DO,EAF1D,oBAGoBH,EAAAA,GAAAA,IAAUD,GAH9B,cAGGb,EAHH,yBAIIA,EAASe,MAJb,gCAMHX,QAAQC,IAAR,MANG,gFAUA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAAgC/B,GAAhC,yFAEG0B,EAFH,UAEYF,EAFZ,kBAE8BxB,EAF9B,oBAE4CuB,GAF5C,SAGoBI,EAAAA,GAAAA,IAAUD,GAH9B,cAGGb,EAHH,yBAIIA,EAASe,MAJb,gCAMHX,QAAQC,IAAR,MANG,gFAUA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAA+BhC,GAA/B,yFAEG0B,EAFH,UAEYF,EAFZ,kBAE8BxB,EAF9B,4BAEoDuB,GAFpD,SAGoBI,EAAAA,GAAAA,IAAUD,GAH9B,cAGGb,EAHH,yBAIIA,EAASe,MAJb,gCAMHX,QAAQC,IAAR,MANG,gFAUA,SAAeP,EAAtB,+CAAO,OAAP,oBAAO,WAA8BX,GAA9B,yFAEG0B,EAFH,UAEYF,EAFZ,kBAE8BxB,EAF9B,4BAEoDuB,EAFpD,oBAGoBI,EAAAA,GAAAA,IAAUD,GAH9B,cAGGb,EAHH,yBAIIA,EAASe,MAJb,gCAMHX,QAAQC,IAAR,MANG,gF","sources":["components/Review/Review.styled.jsx","components/Review/Review.jsx","pages/ReviewPage/ReviewPage.styled.jsx","pages/ReviewPage/ReviewPage.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 1000px;\n  margin: 0 auto;\n`;\n\nexport const ReviewList = styled.ul`\n  list-style: none;\n`;\n\nexport const ReviewItem = styled.li`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 30px;\n`;\n\nexport const ReviewText = styled.div``;\n\nexport const Author = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const Text = styled.p``;\n","import PropTypes from 'prop-types';\nimport {\n  Container,\n  ReviewList,\n  ReviewItem,\n  ReviewText,\n  Author,\n  Text,\n} from './Review.styled';\n\nconst Review = ({ items }) => {\n  return (\n    <Container>\n      <p>MOVIE REVIEWS</p>\n      <ReviewList>\n        {items.map(({ id, author, content }) => {\n          return (\n            <ReviewItem key={id}>\n              <ReviewText>\n                <Author>Author: {author}</Author>\n                <Text>{content}</Text>\n              </ReviewText>\n            </ReviewItem>\n          );\n        })}\n      </ReviewList>\n    </Container>\n  );\n};\n\nexport default Review;\n\nReview.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string,\n    }).isRequired\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div``;\n\nexport const Error = styled.p`\n  margin-top: 24px;\n  color: blue;\n  font-weight: 500;\n  font-size: 16px;\n  font-family: 'Exo', sans-serif;\n`;\n","import { useParams } from 'react-router-dom';\nimport { getMovieReview } from 'services/api';\nimport Review from 'components/Review';\nimport { Error, Container } from './ReviewPage.styled';\nimport { useEffect, useState } from 'react';\nimport { startLoader, stopLoader } from 'components/Loader';\n\nconst ReviewPage = () => {\n  const [reviews, setReviews] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const { id } = useParams();\n\n  useEffect(() => {\n    setStatus('pending');\n    getMovieReview(id)\n      .then(response => {\n        setReviews(response.results);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setStatus('rejected');\n        console.log(error);\n      })\n      .finally(() => {\n        stopLoader();\n      });\n  }, [id]);\n\n  return (\n    <Container>\n      {status === 'pending' && startLoader()}\n      {status === 'resolved' && reviews.length > 0 && (\n        <Review items={reviews} />\n      )}\n      {reviews.length === 0 && (\n        <Error>We don't have any review for this movie</Error>\n      )}\n      {status === 'rejected' && (\n        <Error>Ups... Something went wrong. Please try again later.</Error>\n      )}\n    </Container>\n  );\n};\n\nexport default ReviewPage;\n","import axios from 'axios';\n\nconst KEY = '0d230252106f56106b4162aa542b588d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendingMovies() {\n  try {\n    const url = `${BASE_URL}/trending/movie/day?api_key=${KEY}&page=1`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesByName(searchQuery) {\n  try {\n    const url = `${BASE_URL}/search/movie?api_key=${KEY}&query=${searchQuery}&page=1`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesDetails(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}?api_key=${KEY}`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCredits(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}/credits?api_key=${KEY}`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReview(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&page=1`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["Container","styled","ReviewList","ReviewItem","ReviewText","Author","Text","items","map","id","author","content","Error","useState","reviews","setReviews","status","setStatus","useParams","useEffect","getMovieReview","then","response","results","catch","error","console","log","finally","stopLoader","startLoader","length","KEY","BASE_URL","getTrendingMovies","url","axios","data","getMoviesByName","searchQuery","getMoviesDetails","getMovieCredits"],"sourceRoot":""}