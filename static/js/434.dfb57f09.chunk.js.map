{"version":3,"file":"static/js/434.dfb57f09.chunk.js","mappings":"wYAGaA,EAAYC,EAAAA,EAAAA,IAAH,qkBAkBTC,EAAYD,EAAAA,EAAAA,IAAH,oEAKTE,EAAQF,EAAAA,EAAAA,IAAH,uLAULG,EAAWH,EAAAA,EAAAA,IAAH,oLAWRI,EAAcJ,EAAAA,EAAAA,EAAH,sBAEXK,EAAQL,EAAAA,EAAAA,GAAH,yFAMLM,EAAUN,EAAAA,EAAAA,IAAH,uGAQPO,EAAYP,EAAAA,EAAAA,GAAH,gFAMTQ,GAAgBR,EAAAA,EAAAA,GAAOS,EAAAA,GAAPT,CAAH,iW,SCL1B,EAjDqB,SAAC,GAAc,IAAZU,EAAW,EAAXA,KAEpBC,EAMED,EANFC,eACAC,EAKEF,EALFE,OACAC,EAIEH,EAJFG,SACAC,EAGEJ,EAHFI,YACAC,EAEEL,EAFFK,aACAC,EACEN,EADFM,aAGIC,EAAcF,EAAaG,MAAM,EAAG,GACpCC,EAAcC,KAAKC,MAAqB,GAAfL,GACzBM,EAAcV,EAAOW,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAC9BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAAC5B,EAAD,YACE,SAACE,EAAD,WACE,SAACC,EAAD,CAAO0B,IATK,kCASed,EAAae,IAAKlB,OAE/C,UAACR,EAAD,YACE,UAACE,EAAD,WACGM,EADH,KACqBM,GAA4B,MADjD,QAGA,oCAAYK,EAAYQ,KAAK,WAC7B,UAACxB,EAAD,YACE,uCACC,GACAa,EAAcA,EAAc,IAAM,qBAErC,UAACf,EAAD,wBAAwBS,MACxB,UAACN,EAAD,YACE,yBACE,SAACC,EAAD,CAAeuB,GAAG,OAAOC,MAAON,EAASM,MAAzC,qBAIF,yBACE,SAACxB,EAAD,CAAeuB,GAAG,SAASC,MAAON,EAASM,MAA3C,6BAMN,SAAC,KAAD,MAGL,EC5DYjC,EAAYC,EAAAA,EAAAA,IAAH,6DAKTiC,EAAajC,EAAAA,EAAAA,GAAH,6CAIVkC,EAAalC,EAAAA,EAAAA,GAAH,0FAMVmC,EAAanC,EAAAA,EAAAA,IAAH,sBAEVoC,EAASpC,EAAAA,EAAAA,EAAH,gDAINqC,EAAOrC,EAAAA,EAAAA,EAAH,sBCOjB,EApBe,SAAC,GAAe,IAAbsC,EAAY,EAAZA,MAChB,OACE,UAAC,EAAD,YACE,0CACA,SAACL,EAAD,UACGK,EAAMf,KAAI,YAA8B,IAA3BgB,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACxB,OACE,SAACP,EAAD,WACE,UAACC,EAAD,YACE,UAACC,EAAD,sBAAiBI,MACjB,SAACH,EAAD,UAAOI,QAHMF,EAOpB,QAIR,EC1BYxC,EAAYC,EAAAA,EAAAA,IAAH,sBAET0C,GAAQ1C,EAAAA,EAAAA,EAAH,yI,UCuClB,GApCmB,SAAC,GAAiB,IAAf2C,EAAc,EAAdA,QACpB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACRD,EAAU,YACVE,EAAAA,EAAAA,IAAeP,GACZQ,MAAK,SAAAC,GACJN,EAAWM,EAASC,SACpBL,EAAU,WACX,IACAM,OAAM,SAAAC,GACLP,EAAU,YACVQ,QAAQC,IAAIF,EACb,IACAG,SAAQ,YACPC,EAAAA,GAAAA,IACD,GACJ,GAAE,CAAChB,KAGF,UAAC,EAAD,WACc,YAAXI,IAAwBa,EAAAA,GAAAA,KACb,aAAXb,GAAyBF,EAAQgB,OAAS,IACzC,SAAC,EAAD,CAAQvB,MAAOO,IAEG,IAAnBA,EAAQgB,SACP,SAACnB,GAAD,sDAEU,aAAXK,IACC,SAACL,GAAD,qEAIP,ECvCYoB,GAAW9D,EAAAA,EAAAA,GAAH,+MAWR+D,GAAW/D,EAAAA,EAAAA,GAAH,gKAQRE,GAAQF,EAAAA,EAAAA,IAAH,gMAULgE,GAAOhE,EAAAA,EAAAA,IAAH,sFAMJiE,GAAOjE,EAAAA,EAAAA,EAAH,sGCJjB,GA9Ba,SAAC,GAAe,IAAbsC,EAAY,EAAZA,MAEd,OACE,SAACwB,GAAD,UACGxB,EAAMf,KAAI,YAA4C,IAAzCgB,EAAwC,EAAxCA,GAAI2B,EAAoC,EAApCA,UAAWzC,EAAyB,EAAzBA,KAAM0C,EAAmB,EAAnBA,aACjC,OACE,UAACJ,GAAD,YACE,0BACE,SAAC,GAAD,CACEnC,IACEuC,EATA,kCAUcA,EACV,yBAENtC,IAAI,QACJuC,MAAM,MACNC,OAAO,WAGX,UAACL,GAAD,YACE,kCAAUvC,MACV,UAACwC,GAAD,yBAAkBC,UAfP3B,EAmBlB,KAGN,EC7BYG,GAAQ1C,EAAAA,EAAAA,EAAH,yICuClB,GAlCiB,SAAC,GAAiB,IAAf2C,EAAc,EAAdA,QAClB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAO0B,EAAP,KAAeC,EAAf,KACA,GAA4B3B,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACRD,EAAU,YACVwB,EAAAA,EAAAA,IAAgB7B,GACbQ,MAAK,SAAAC,GACJmB,EAAUnB,EAASqB,MACnBzB,EAAU,WACX,IACAM,OAAM,SAAAC,GACLP,EAAU,YACVQ,QAAQC,IAAIF,EACb,IACAG,SAAQ,YACPC,EAAAA,GAAAA,IACD,GACJ,GAAE,CAAChB,KAGF,2BACc,YAAXI,IAAwBa,EAAAA,GAAAA,KACb,aAAXb,GAAyBuB,EAAOT,OAAS,IAAK,SAAC,GAAD,CAAMvB,MAAOgC,IACzC,IAAlBA,EAAOT,SACN,SAAC,GAAD,qEAEU,aAAXd,IACC,kFAIP,ECrCYhD,GAAYC,EAAAA,EAAAA,IAAH,+bAwBT0C,GAAQ1C,EAAAA,EAAAA,GAAH,qECiClB,GAjDkB,WAChB,OAA0B4C,EAAAA,EAAAA,UAAS,MAAnC,eAAO8B,EAAP,KAAcC,EAAd,KACA,GAA4B/B,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACQT,GAAOqC,EAAAA,EAAAA,MAAPrC,GACFsC,GAAWC,EAAAA,EAAAA,MACXpD,GAAWC,EAAAA,EAAAA,OAEjBsB,EAAAA,EAAAA,YAAU,WACRD,EAAU,YACV+B,EAAAA,EAAAA,IAAiBxC,GACdY,MAAK,SAAAC,GACJuB,EAASvB,GACTJ,EAAU,WACX,IACAM,OAAM,SAAAC,GACLP,EAAU,YACVQ,QAAQC,IAAIF,EACb,IACAG,SAAQ,YACPC,EAAAA,GAAAA,IACD,GACJ,GAAE,CAACpB,IAMJ,OACE,UAAC,GAAD,WACc,YAAXQ,IAAwBa,EAAAA,GAAAA,KACb,aAAXb,IACC,iCACE,mBAAQiC,KAAK,SAASC,QATR,WAAO,IAAD,IAC1BJ,EAAQ,iBAACnD,QAAD,IAACA,GAAD,UAACA,EAAUM,aAAX,aAAC,EAAiBkD,YAAlB,QAA0B,IACnC,EAOO,sBAGA,SAAC,EAAD,CAAcxE,KAAMgE,OAGZ,aAAX3B,IACC,SAAC,GAAD,oEAEF,UAAC,KAAD,YACE,SAAC,KAAD,CAAOoC,KAAK,SAASC,SAAS,SAAC,GAAD,CAAYzC,QAASJ,OACnD,SAAC,KAAD,CAAO4C,KAAK,OAAOC,SAAS,SAAC,GAAD,CAAUzC,QAASJ,WAItD,C,8LCvDK8C,EAAM,mCACNC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGAEGC,EAFH,UAEYF,EAFZ,uCAEmDD,EAFnD,mCAGoBI,EAAAA,GAAAA,IAAUD,GAH9B,cAGGpC,EAHH,yBAIIA,EAASsC,MAJb,gCAMHlC,QAAQC,IAAR,MANG,gFAUA,SAAekC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFAEGJ,EAFH,UAEYF,EAFZ,iCAE6CD,EAF7C,kBAE0DO,EAF1D,uDAGoBH,EAAAA,GAAAA,IAAUD,GAH9B,cAGGpC,EAHH,yBAIIA,EAASsC,MAJb,gCAMHlC,QAAQC,IAAR,MANG,gFAUA,SAAesB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCxC,GAAhC,yFAEGiD,EAFH,UAEYF,EAFZ,kBAE8B/C,EAF9B,oBAE4C8C,EAF5C,4BAGoBI,EAAAA,GAAAA,IAAUD,GAH9B,cAGGpC,EAHH,yBAIIA,EAASsC,MAJb,gCAMHlC,QAAQC,IAAR,MANG,gFAUA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAA+BjC,GAA/B,yFAEGiD,EAFH,UAEYF,EAFZ,kBAE8B/C,EAF9B,4BAEoD8C,EAFpD,4BAGoBI,EAAAA,GAAAA,IAAUD,GAH9B,cAGGpC,EAHH,yBAIIA,EAASsC,MAJb,gCAMHlC,QAAQC,IAAR,MANG,gFAUA,SAAeP,EAAtB,+CAAO,OAAP,oBAAO,WAA8BX,GAA9B,yFAEGiD,EAFH,UAEYF,EAFZ,kBAE8B/C,EAF9B,4BAEoD8C,EAFpD,mCAGoBI,EAAAA,GAAAA,IAAUD,GAH9B,cAGGpC,EAHH,yBAIIA,EAASsC,MAJb,gCAMHlC,QAAQC,IAAR,MANG,gF","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","components/Review/Review.styled.jsx","components/Review/Review.jsx","pages/ReviewPage/ReviewPage.styled.jsx","pages/ReviewPage/ReviewPage.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","pages/CastPage/CastPage.styled.jsx","pages/CastPage/CastPage.jsx","pages/MoviePage/MoviePage.styled.jsx","pages/MoviePage/MoviePage.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: flex-start;\n  width: 1000px;\n  margin: 0 auto;\n  margin-bottom: 30px;\n  padding: 30px;\n  //   box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n  //     0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  //   &:hover {\n  //     transform: scale(1.03);\n  //     cursor: pointer;\n  //     box-shadow: 10px 11px 10px -4px rgba(0, 0, 0, 0.48);\n  //     -webkit-box-shadow: 10px 11px 10px -4px rgba(0, 0, 0, 0.48);\n  //     -moz-box-shadow: 10px 11px 10px -4px rgba(0, 0, 0, 0.48);\n  //   }\n`;\n\nexport const ImageWrap = styled.div`\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\nexport const Image = styled.img`\n  width: 360px;\n  height: 450px;\n  transition: all 600ms cubic-bezier(0.4, 0, 0.2, 1);\n  border-radius: 4px;\n  &:hover {\n    transform: scale(0.6);\n  }\n`;\n\nexport const InfoWrap = styled.div`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 0px 30px;\n  p {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Description = styled.p``;\n\nexport const Title = styled.h2`\n  font-weight: 700;\n  font-size: 30px;\n  margin-bottom: 20px;\n`;\n\nexport const Raiting = styled.div`\n  display: flex;\n  margin-bottom: 30px;\n  p {\n    margin-right: 20px;\n  }\n`;\n\nexport const OtherInfo = styled.ul`\n  display: flex;\n  list-style: none;\n  padding: 0px;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  width: 40px;\n  margin-right: 20px;\n  padding: 5px;\n  color: blue;\n  font-weight: 500;\n  font-size: 20px;\n  border-radius: 4px;\n  outline: none;\n  text-decoration: none;\n  &.active {\n    color: #ffffff;\n    background-color: blue;\n  }\n  &:hover,\n  &:focus {\n    color: #ffffff;\n    background-color: blue;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Outlet, useLocation } from 'react-router-dom';\n\nimport {\n  Container,\n  ImageWrap,\n  Image,\n  InfoWrap,\n  Title,\n  Raiting,\n  Description,\n  OtherInfo,\n  StyledNavLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = ({ info }) => {\n  const {\n    original_title,\n    genres,\n    overview,\n    poster_path,\n    release_date,\n    vote_average,\n  } = info;\n  const imageBaseUrl = `https://image.tmdb.org/t/p/w500`;\n  const releaseDate = release_date.slice(0, 4);\n  const voteAverage = Math.floor(vote_average * 10);\n  const movieGanres = genres.map(genre => genre.name);\n  const location = useLocation();\n\n  return (\n    <Container>\n      <ImageWrap>\n        <Image src={imageBaseUrl + poster_path} alt={original_title} />\n      </ImageWrap>\n      <InfoWrap>\n        <Title>\n          {original_title} ({releaseDate ? releaseDate : 'N/A'})\n        </Title>\n        <p>Genres: {movieGanres.join(' , ')}</p>\n        <Raiting>\n          <p>User score:</p>\n          {''}\n          {voteAverage ? voteAverage + '%' : 'No information'}\n        </Raiting>\n        <Description>Overview: {overview}</Description>\n        <OtherInfo>\n          <li>\n            <StyledNavLink to=\"cast\" state={location.state}>\n              CAST\n            </StyledNavLink>\n          </li>\n          <li>\n            <StyledNavLink to=\"review\" state={location.state}>\n              REVIEW\n            </StyledNavLink>\n          </li>\n        </OtherInfo>\n      </InfoWrap>\n      <Outlet />\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n  info: PropTypes.shape({\n    original_title: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    overview: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 1000px;\n  margin: 0 auto;\n`;\n\nexport const ReviewList = styled.ul`\n  list-style: none;\n`;\n\nexport const ReviewItem = styled.li`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 30px;\n`;\n\nexport const ReviewText = styled.div``;\n\nexport const Author = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const Text = styled.p``;\n","import PropTypes from 'prop-types';\nimport {\n  Container,\n  ReviewList,\n  ReviewItem,\n  ReviewText,\n  Author,\n  Text,\n} from './Review.styled';\n\nconst Review = ({ items }) => {\n  return (\n    <Container>\n      <p>MOVIE REVIEWS</p>\n      <ReviewList>\n        {items.map(({ id, author, content }) => {\n          return (\n            <ReviewItem key={id}>\n              <ReviewText>\n                <Author>Author: {author}</Author>\n                <Text>{content}</Text>\n              </ReviewText>\n            </ReviewItem>\n          );\n        })}\n      </ReviewList>\n    </Container>\n  );\n};\n\nexport default Review;\n\nReview.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string,\n    }).isRequired\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div``;\n\nexport const Error = styled.p`\n  margin-top: 24px;\n  color: blue;\n  font-weight: 500;\n  font-size: 16px;\n  font-family: 'Exo', sans-serif;\n`;\n","import PropTypes from 'prop-types';\nimport { getMovieReview } from 'services/api';\nimport Review from 'components/Review';\nimport { Error, Container } from './ReviewPage.styled';\nimport { useEffect, useState } from 'react';\nimport { startLoader, stopLoader } from 'components/Loader';\n\nconst ReviewPage = ({ movieId }) => {\n  const [reviews, setReviews] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    setStatus('pending');\n    getMovieReview(movieId)\n      .then(response => {\n        setReviews(response.results);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setStatus('rejected');\n        console.log(error);\n      })\n      .finally(() => {\n        stopLoader();\n      });\n  }, [movieId]);\n\n  return (\n    <Container>\n      {status === 'pending' && startLoader()}\n      {status === 'resolved' && reviews.length > 0 && (\n        <Review items={reviews} />\n      )}\n      {reviews.length === 0 && (\n        <Error>We don't have any review for this movie</Error>\n      )}\n      {status === 'rejected' && (\n        <Error>Ups... Something went wrong. Please try again later.</Error>\n      )}\n    </Container>\n  );\n};\n\nexport default ReviewPage;\n\nReviewPage.propTypes = {\n  movieId: PropTypes.string,\n};\n","import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  padding-right: 100px;\n  padding-left: 100px;\n  margin-left: -20px;\n`;\n\nexport const CastItem = styled.li`\n  flex-basis: calc ((100% - 4 * 30px) / 4);\n  margin-left: 20px;\n  margin-bottom: 20px;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const Image = styled.img`\n  border-radius: 50%;\n  object-fit: cover;\n  transition: all 600ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(0.7);\n    cursor: pointer;\n  }\n`;\n\nexport const Info = styled.div`\n  width: 250px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Role = styled.p`\n  font-family: 'Metal Mania', cursive;\n  &:hover {\n    color: yellow;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { CastList, CastItem, Image, Info, Role } from './Cast.styled';\n\nconst Cast = ({ items }) => {\n  const baseUrl = 'https://image.tmdb.org/t/p/w500';\n  return (\n    <CastList>\n      {items.map(({ id, character, name, profile_path }) => {\n        return (\n          <CastItem key={id}>\n            <div>\n              <Image\n                src={\n                  profile_path\n                    ? baseUrl + profile_path\n                    : './images/no-photo_info'\n                }\n                alt=\"actor\"\n                width=\"200\"\n                height=\"200\"\n              />\n            </div>\n            <Info>\n              <p>Name: {name}</p>\n              <Role>Character: {character}</Role>\n            </Info>\n          </CastItem>\n        );\n      })}\n    </CastList>\n  );\n};\n\nexport default Cast;\n\nCast.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n    }).isRequired\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const Error = styled.p`\n  margin-top: 24px;\n  color: blue;\n  font-weight: 500;\n  font-size: 16px;\n  font-family: 'Exo', sans-serif;\n`;\n","import PropTypes from 'prop-types';\nimport { getMovieCredits } from 'services/api';\nimport Cast from 'components/Cast';\nimport { Error } from './CastPage.styled';\nimport { useEffect, useState } from 'react';\nimport { startLoader, stopLoader } from 'components/Loader';\n\nconst CastPage = ({ movieId }) => {\n  const [actors, setActors] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    setStatus('pending');\n    getMovieCredits(movieId)\n      .then(response => {\n        setActors(response.cast);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setStatus('rejected');\n        console.log(error);\n      })\n      .finally(() => {\n        stopLoader();\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      {status === 'pending' && startLoader()}\n      {status === 'resolved' && actors.length > 0 && <Cast items={actors} />}\n      {actors.length === 0 && (\n        <Error>We don't have any information about cast of this movie</Error>\n      )}\n      {status === 'rejected' && (\n        <p>Ups... Something went wrong. Please try again later.</p>\n      )}\n    </div>\n  );\n};\n\nexport default CastPage;\n\nCastPage.propTypes = {\n  movieId: PropTypes.string,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 50px 100px;\n  button {\n    width: 100px;\n    padding: 5px;\n    background-color: blue;\n    color: #ffffff;\n    font-weight: 500;\n    font-size: 16px;\n    font-family: 'Exo', sans-serif;\n    border-radius: 4px;\n    border: none;\n    outline: none;\n    &.active {\n      background-color: yellow;\n    }\n    &:hover,\n    &:focus {\n      color: #ffffff;\n      background-color: yellow;\n    }\n  }\n`;\n\nexport const Error = styled.h2`\n  text-align: center;\n  margin-top: 100px;\n`;\n","import { Routes, Route } from 'react-router-dom';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMoviesDetails } from 'services/api';\nimport MovieDetails from 'components/MovieDetails';\nimport ReviewPage from 'pages/ReviewPage';\nimport CastPage from 'pages/CastPage';\nimport { Container, Error } from './MoviePage.styled';\nimport { startLoader, stopLoader } from 'components/Loader';\n\nconst MoviePage = () => {\n  const [movie, setMovie] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    setStatus('pending');\n    getMoviesDetails(id)\n      .then(response => {\n        setMovie(response);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setStatus('rejected');\n        console.log(error);\n      })\n      .finally(() => {\n        stopLoader();\n      });\n  }, [id]);\n\n  const onGoBackClick = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n\n  return (\n    <Container>\n      {status === 'pending' && startLoader()}\n      {status === 'resolved' && (\n        <>\n          <button type=\"button\" onClick={onGoBackClick}>\n            GO BACK\n          </button>\n          <MovieDetails info={movie} />\n        </>\n      )}\n      {status === 'rejected' && (\n        <Error>Ups... Something went wrong. Please try again later.</Error>\n      )}\n      <Routes>\n        <Route path=\"review\" element={<ReviewPage movieId={id} />} />\n        <Route path=\"cast\" element={<CastPage movieId={id} />} />\n      </Routes>\n    </Container>\n  );\n};\n\nexport default MoviePage;\n","import axios from 'axios';\n\nconst KEY = '0d230252106f56106b4162aa542b588d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendingMovies() {\n  try {\n    const url = `${BASE_URL}/trending/movie/day?api_key=${KEY}&language=en-US&page=1`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesByName(searchQuery) {\n  try {\n    const url = `${BASE_URL}/search/movie?api_key=${KEY}&query=${searchQuery}&include_adult=false&language=en-US&page=1`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesDetails(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCredits(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReview(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["Container","styled","ImageWrap","Image","InfoWrap","Description","Title","Raiting","OtherInfo","StyledNavLink","NavLink","info","original_title","genres","overview","poster_path","release_date","vote_average","releaseDate","slice","voteAverage","Math","floor","movieGanres","map","genre","name","location","useLocation","src","alt","join","to","state","ReviewList","ReviewItem","ReviewText","Author","Text","items","id","author","content","Error","movieId","useState","reviews","setReviews","status","setStatus","useEffect","getMovieReview","then","response","results","catch","error","console","log","finally","stopLoader","startLoader","length","CastList","CastItem","Info","Role","character","profile_path","width","height","actors","setActors","getMovieCredits","cast","movie","setMovie","useParams","navigate","useNavigate","getMoviesDetails","type","onClick","from","path","element","KEY","BASE_URL","getTrendingMovies","url","axios","data","getMoviesByName","searchQuery"],"sourceRoot":""}